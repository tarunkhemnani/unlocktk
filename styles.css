:root {
  --circle-size: 80px;
  --gap-x: 28px;
  --gap-y: 18px;
  --safe-bottom: env(safe-area-inset-bottom);
  --app-viewport-height: 100dvh; /* updated by JS at runtime */

  /* Dynamic island sizing (tuned to screenshot) */
  --island-w: 170px;     /* <-- reduced width so pill doesn't stretch to the sides */
  --island-h: 42px;      /* height preserved */
  --island-radius: 28px; /* radius preserved */
  /* NEGATIVE offset to move the pill up so it's flush with the real island */
  --island-top-offset: -49px;

  /* Icon helper - change this value to scale both icons together */
  --island-icon-size: 22px;
}

/* Root: prevent rubber-band and provide safe fallback background */
html, body {
  touch-action: manipulation;
  margin: 0;
  padding: 0;
  height: 100%;
  min-height: 100%;
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
  font-family: -apple-system, BlinkMacSystemFont, "SF Pro Text", "Helvetica Neue", Arial, sans-serif;

  /* gradient fallback so you never see plain white/black */
  background-color: #000;
  background: linear-gradient(135deg,#0f1724,#071023);

  /* disable overscroll at root to stop elastic bounce */
  overscroll-behavior: none;
  overflow: hidden;
  -webkit-overflow-scrolling: auto;
}

/* wallpaper layer - fill the entire screen so the wallpaper is visible under status/home */
.wallpaper-layer {
  position: fixed;
  inset: 0; /* full-bleed */
  z-index: 0;
  pointer-events: none;
  background: linear-gradient(135deg,#0f1724,#071023);
  display: block;
  overflow: hidden;
}

/* Use an <img> so painting is reliable in iOS PWA mode */
.wallpaper-img {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
  pointer-events: none;
  -webkit-user-select: none;
  user-select: none;
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
}

/* outer container pinned to viewport using JS-updated height variable */
.lockscreen {
  position: fixed;
  left: 0;
  right: 0;
  top: 0;
  z-index: 2;
  width: 100%;
  height: var(--app-viewport-height, 100dvh);
  min-height: var(--app-viewport-height, 100dvh);
  display: flex;
  justify-content: center;
  align-items: flex-start;
  box-sizing: border-box;
  overflow: hidden;
  padding-top: calc(env(safe-area-inset-top) + 84px);
  padding-bottom: calc(var(--safe-bottom) + 8px);
  background: transparent;
}

/* tiny bottom filler now transparent so it won't paint a visible bar */
.lockscreen::after {
  content: "";
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  height: calc(env(safe-area-inset-bottom, 0px) + 4px); /* tiny overfill */
  pointer-events: none;
  z-index: 9998;
  background: transparent;
}

/* inner wrapper (we animate this with JS) */
.lockscreen-inner {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  z-index: 3;
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
  backface-visibility: hidden;
  transform: translate3d(0,0,0) scale(1);
}

/* prompt / dots */
.prompt {
  position: relative;
  z-index: 3;
  text-align: center;
  font-size: 20px;
  font-weight: 600;
  line-height: 1.15;
  text-shadow: 0 3px 12px rgba(0,0,0,0.6);
  margin-bottom: 18px;
  color: white;
}

.dots {
  display: flex;
  gap: 14px;
  margin-bottom: 28px;
  pointer-events: none;
  z-index: 3;
  will-change: transform;
}
.dot {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  border: 1.25px solid #fff;
  background: transparent;
  transition: background .12s ease, transform .12s ease, border-color .12s ease;
  box-shadow: 0 2px 6px rgba(0,0,0,0.45) inset;
}
.dot.filled {
  background: #fff;
  border-color: #fff;
  transform: scale(1.06);
  box-shadow: none;
}

/* keypad layout */
.keypad {
  width: 100%;
  max-width: 420px;
  display: grid;
  grid-template-columns: repeat(3, var(--circle-size));
  gap: var(--gap-y) var(--gap-x);
  justify-content: center;
  align-items: center;
  margin-top: 50px;
  z-index: 3;
}

.key {
  width: var(--circle-size);
  height: var(--circle-size);
  border-radius: 999px;
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background: rgba(255,255,255,0.07);
  backdrop-filter: blur(30px);
  -webkit-backdrop-filter: blur(30px);
  border: none;
  color: white;
  font-size: 32px;
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
  user-select: none;
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.35);
  position: relative;
  z-index: 3;
}

.key.empty {
  background: transparent !important;
  box-shadow: none !important;
  cursor: default;
  pointer-events: none;
  visibility: hidden;
}

.key .num {
  display: block;
  font-weight: 600;
  line-height: 1;
  font-size: 34px;
  color: white !important;
  text-shadow: 0 2px 10px rgba(0,0,0,0.45);
}
.key .letters {
  display: block;
  font-size: 12px;
  color: #fff;
  margin-top: 6px;
  letter-spacing: 0.9px;
  text-shadow: 0 1px 2px rgba(0,0,0,0.45);
  font-weight: 600;
}

/* bottom actions aligned to keypad width and centered like iPhone */
.bottom-actions {
  position: absolute;
  left: 50%;
  bottom: calc(var(--safe-bottom) + 36px);
  transform: translateX(-50%);
  width: min(420px, calc(100% - 56px));
  max-width: 420px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 28px;
  box-sizing: border-box;
  z-index: 5;
  pointer-events: auto;
  background: transparent;
}

/* action buttons styling */
.action {
  background: none;
  border: none;
  color: white;
  font-size: 18px;
  line-height: 1;
  font-weight: 400;
  opacity: 0.98;
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
  padding: 6px 8px;
  display: inline-block;
  text-align: center;
}

/* unlock overlay & homescreen preview (fixed) */
.unlock-overlay {
  position: fixed;
  inset: 0;
  z-index: 9999;
  display: none;
  align-items: center;
  justify-content: center;
  background: transparent;
  pointer-events: none;
}
.homescreen-img {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  object-fit: cover;
  transform-origin: center;
  transform: scale(0.98);
  opacity: 0;
  filter: blur(6px) saturate(0.9);
  z-index: 10000;
  pointer-events: none;
  -webkit-transform: translateZ(0);
  backface-visibility: hidden;
}
.unlock-overlay.show {
  display: flex;
  pointer-events: auto;
}

/* simple toast used by app.js */
#pass-toast {
  position: fixed;
  left: 50%;
  bottom: calc(var(--safe-bottom) + 110px);
  transform: translateX(-50%);
  background: rgba(0,0,0,0.75);
  color: #fff;
  padding: 8px 12px;
  border-radius: 10px;
  font-weight: 600;
  z-index: 12002;
  pointer-events: none;
  font-family: -apple-system, BlinkMacSystemFont, "SF Pro Text", "Helvetica Neue", Arial, sans-serif;
  box-shadow: 0 6px 18px rgba(0,0,0,0.6);
  opacity: 0;
  transition: opacity 160ms ease, transform 160ms ease;
}

/* Wrong attempt shake */
@keyframes passShake {
  0%   { transform: translateX(0); }
  6%   { transform: translateX(-20px); }
  14%  { transform: translateX(16px); }
  24%  { transform: translateX(-14px); }
  36%  { transform: translateX(12px); }
  52%  { transform: translateX(-8px); }
  72%  { transform: translateX(6px); }
  88%  { transform: translateX(-3px); }
  100% { transform: translateX(0); }
}
.dots.wrong {
  animation: passShake 700ms cubic-bezier(.36,.07,.19,.97);
  transform-origin: center;
  will-change: transform;
}

/* reduced motion fallback */
@media (prefers-reduced-motion: reduce) {
  .lockscreen-inner { transition: none !important; transform: none !important; }
  .homescreen-img { transition: none !important; transform: none !important; filter: none !important; opacity: 1 !important; }
}

/* Slight nudge: move Emergency a touch further left */
#emergency { margin-left: -6px; }
@media (max-width: 420px) { #emergency { margin-left: -8px; } }

/* =========================
   Dynamic Island (tuned to your screenshot)
   ========================= */

/* Pill base & positioning */
.dynamic-island{
  position: absolute;
  left: 50%;
  top: calc(env(safe-area-inset-top, 20px) + var(--island-top-offset)); /* preserved -49px offset */
  transform: translateX(calc(-50% - 10px)) scaleX(1);
  transform-origin: center;
  width: var(--island-w);
  height: var(--island-h);
  border-radius: var(--island-radius);
  pointer-events: none;
  z-index: 12001;

  /* glossy pill background mimicking iOS */
  background:
    linear-gradient(180deg, rgba(255,255,255,0.04) 0%, rgba(255,255,255,0.02) 6%, rgba(0,0,0,0.92) 24%),
    radial-gradient(80% 120% at 50% -40%, rgba(255,255,255,0.06), rgba(0,0,0,0) 45%),
    #000;

  /* strong outer shadow + thin inner stroke */
  box-shadow:
    0 16px 36px rgba(0,0,0,0.55),
    0 0 0 1px rgba(255,255,255,0.03) inset,
    0 1px 0 rgba(255,255,255,0.06) inset;

  backdrop-filter: blur(8px) saturate(0.9);
  -webkit-backdrop-filter: blur(8px) saturate(0.9);

  /* transitions for the shrink/fade behavior */
  transition: transform 520ms cubic-bezier(.22,.9,.29,.99), opacity 420ms ease;
  will-change: transform, opacity;
}

/* Shrink state: horizontally collapse and fade out.
   We scale X near zero so the visual shrinks horizontally from center.
*/
.dynamic-island.shrinking {
  transform: translateX(calc(-50% - 10px)) scaleX(0.02);
  opacity: 0;
}

/* -------------------------
   Padlock using the existing .gloss element
   - This draws the shackle (::before) and body (::after)
   - No HTML changes required (re-uses <span class="gloss">)
   ------------------------- */

.dynamic-island .gloss {
  position: absolute;
  left: 9%;
  right: 9%;
  top: 8%;
  height: 36%;
  border-radius: 999px;
  pointer-events: none;
  background: linear-gradient(180deg, rgba(255,255,255,0.06), rgba(255,255,255,0.02));
  filter: blur(5px);
  opacity: 0.95;
  mix-blend-mode: screen;

  /* ensure the gloss remains visually behind the padlock marks by allowing pseudo elements to stack above */
  z-index: 2;
}

/* Padlock shackle (drawn with the gloss::before pseudo) */
.dynamic-island .gloss::before {
  content: "";
  position: absolute;
  /* place left side inside pill (tuned to match screenshot) */
  left: 12px;
  top: 50%;
  transform: translateY(-50%) rotate(0deg);
  width: calc(var(--island-icon-size) * 1.2);
  height: calc(var(--island-icon-size) * 1);
  border: 2.2px solid #ffffff;
  border-bottom: none;
  border-radius: 999px 999px 0 0;
  transform-origin: left bottom; /* pivot on left bottom so it swings to right */
  transition: transform 360ms cubic-bezier(.22,.9,.29,.99);
  will-change: transform;
  z-index: 3;
  box-shadow: 0 1px 0 rgba(0,0,0,0.35);
  background: transparent;
}

/* Padlock body (keep stationary) - drawn with gloss::after */
.dynamic-island .gloss::after {
  content: "";
  position: absolute;
  left: 14px;
  top: calc(50% + 6px);
  transform: translateY(-50%);
  width: calc(var(--island-icon-size) * 0.9);
  height: calc(var(--island-icon-size) * 0.9);
  background: #ffffff;
  border-radius: 3px;
  z-index: 3;
  box-shadow: 0 2px 6px rgba(0,0,0,0.28);
}

/* Icon states: when JS toggles classes (.icon-opened / .unlocked) we animate the shackle */
@keyframes shackleOpen {
  /* start closed, quick overshoot, settle near ~160deg (slightly less than 180) */
  0% {
    transform: translateY(-50%) rotate(0deg) scale(1);
  }
  40% {
    transform: translateY(-52%) rotate(210deg) scale(1.04); /* overshoot past vertical */
  }
  75% {
    transform: translateY(-51%) rotate(170deg) scale(1.02);
  }
  100% {
    transform: translateY(-50%) rotate(160deg) scale(1.0); /* final slightly less than 180 */
  }
}

/* Play the animation when the JS adds .icon-opened (your app.js does this) */
.dynamic-island.icon-opened .gloss::before {
  animation: shackleOpen 720ms cubic-bezier(.22,.9,.29,.99) forwards;
  /* subtle extra emphasis */
  box-shadow: 0 3px 2px rgba(0,0,0,0.35);
}

/* Ensure final "unlocked" class keeps shackle rotated (in case animation skipped) */
.dynamic-island.unlocked .gloss::before {
  transform: translateY(-50%) rotate(160deg);
}

/* While opening, body gets a tiny pop scale */
.dynamic-island.icon-opened .gloss::after {
  transform: translateY(-50%) scale(1.02);
  transition: transform 420ms cubic-bezier(.22,.9,.29,.99);
  box-shadow: 0 3px 10px rgba(0,0,0,0.32);
}

/* Right-side faint face icon (kept as an image background — unchanged) */
.dynamic-island::after {
  content: "";
  position: absolute;
  top: 50%;
  right: 12px;
  width: var(--island-icon-size);
  height: var(--island-icon-size);
  transform: translateY(-50%);
  opacity: 0.98;
  filter: drop-shadow(0 1px 0 rgba(0,0,0,0.45));
  background-repeat: no-repeat;
  background-position: center;
  background-size: var(--island-icon-size) var(--island-icon-size);
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23ffffff' stroke-opacity='0.18' stroke-width='1.4' stroke-linecap='round' stroke-linejoin='round'><circle cx='9' cy='11' r='1.2' fill='%23ffffff' fill-opacity='0.18' stroke='none'/><circle cx='15' cy='11' r='1.2' fill='%23ffffff' fill-opacity='0.18' stroke='none'/><path d='M9 15c1.2 1 4.8 1 6 0' stroke='%23ffffff' stroke-opacity='0.18' fill='none'/></svg>");
}

/* slightly smaller lock / face on narrow screens */
@media (max-width: 420px){
  :root{ --island-w: 300px; --island-h: 40px; --island-radius: 26px; }
  /* reduce the icon size a touch on very narrow screens */
  :root{ --island-icon-size: 20px; }
  .dynamic-island::after{ width: var(--island-icon-size); height: var(--island-icon-size); right: 14px; background-size: var(--island-icon-size) var(--island-icon-size); }
  .dynamic-island .gloss { left: 12%; right: 12%; top: 8%; height: 34%; filter: blur(4px); }
  .dynamic-island .gloss::before { left: 10px; width: calc(var(--island-icon-size) * 1.0); height: calc(var(--island-icon-size) * 0.95); border-width: 2px; }
  .dynamic-island .gloss::after { left: 12px; width: calc(var(--island-icon-size) * 0.85); height: calc(var(--island-icon-size) * 0.85); }
}

/* accessibility tweak */
@media (prefers-contrast: more){
  .dynamic-island{ box-shadow: 0 18px 42px rgba(0,0,0,0.7); }
}

/* helper class to optionally pulse the FaceID icon (call with JS if you want) */
.dynamic-island.pulse::after{
  animation: facePulse 1400ms ease-in-out infinite;
}
@keyframes facePulse{
  0%   { transform: translateY(-50%) scale(0.98); opacity: 0.95; }
  50%  { transform: translateY(-50%) scale(1.06); opacity: 1; }
  100% { transform: translateY(-50%) scale(0.98); opacity: 0.95; }
}

/* End Dynamic Island */

/* ***************************************************************
   FINAL OVERRIDE — force narrow pill on small viewports and
   re-center icons. Put at the very end so it wins over earlier rules
   (this avoids caching/media-rule conflicts).
   *************************************************************** */

@media (max-width: 420px) {
  .dynamic-island {
    width: 170px !important;
    max-width: 170px !important;
    height: var(--island-h) !important;       /* keep your chosen height */
    border-radius: var(--island-radius) !important;
  }

  /* keep icons visually centered on the shortened pill */
  .dynamic-island::before,
  .dynamic-island::after {
    left: 12px !important;
    right: 12px !important;
    width: var(--island-icon-size) !important;
    height: var(--island-icon-size) !important;
    background-size: var(--island-icon-size) var(--island-icon-size) !important;
  }

  /* tighten inner gloss so it doesn't overflow on narrower width */
  .dynamic-island .gloss {
    left: 12% !important;
    right: 12% !important;
    top: 8% !important;
    height: 34% !important;
    filter: blur(4px) !important;
  }
}
